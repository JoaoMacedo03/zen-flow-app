{
  "name": "zen-flow-app",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext .ts,.tsx",
    "format": "prettier --loglevel warn --write \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "format:check": "prettier --check \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "test": "jest --passWithNoTests --no-cache --runInBand --coverage",
    "posttest": "npm run lint && npm run format:check",
    "release": "standard-version"
  },
  "dependencies": {
    "@coaktion/aktie-clients": "^1.0.0",
    "@coaktion/zendesk-clients-react": "^1.1.3",
    "@sentry/react": "^7.61.0",
    "@testing-library/react": "^14.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@emotion/styled": "^11.10.6",
    "@mui/icons-material": "^5.11.11",
    "@mui/material": "^5.11.11",
    "@testing-library/jest-dom": "^5.16.5",
    "@trivago/prettier-plugin-sort-imports": "^4.1.1",
    "@types/jest": "^29.4.0",
    "@types/react": "^18.0.27",
    "@types/react-dom": "^18.0.10",
    "@typescript-eslint/eslint-plugin": "^5.55.0",
    "@typescript-eslint/parser": "^5.54.0",
    "@vitejs/plugin-react": "^3.1.0",
    "eslint": "^8.35.0",
    "eslint-config-iplayer-ts": "^4.1.0",
    "eslint-config-prettier": "^8.7.0",
    "eslint-config-xo": "^0.43.1",
    "eslint-config-xo-typescript": "^0.56.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.32.2",
    "husky": "^8.0.3",
    "i18next": "^22.4.10",
    "i18next-xhr-backend": "^3.2.2",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "prettier": "^2.8.4",
    "pretty-quick": "^3.1.3",
    "react-i18next": "^12.2.0",
    "sass": "^1.58.3",
    "standard-version": "^9.5.0",
    "ts-jest": "^29.0.5",
    "typescript": "^4.9.5",
    "vite": "^4.1.0",
    "vite-tsconfig-paths": "^4.0.5",
    "yup": "^1.0.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "jsdom",
    "verbose": true,
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/*.test.{ts,tsx}"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/dist/"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/dist/"
    ],
    "transform": {
      ".+\\.(ts|tsx)$": "ts-jest"
    },
    "moduleNameMapper": {
      "@/tests/(.*)": "<rootDir>/tests/$1",
      "@/(.*)": "<rootDir>/src/$1",
      "\\.scss$": "identity-obj-proxy"
    },
    "collectCoverage": true,
    "setupFilesAfterEnv": [
      "<rootDir>/tests/config/jest-setup.ts"
    ],
    "collectCoverageFrom": [
      "<rootDir>/**/*.{ts,tsx}",
      "!<rootDir>/src/**/index.ts",
      "!<rootDir>/src/**/main*",
      "!<rootDir>/src/**/factory*",
      "!<rootDir>/tests/mocks/*",
      "!<rootDir>/src/**/translations/**",
      "!**/*.d.ts"
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ],
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/dist/",
      "/src/index.ts",
      "/src/locales/",
      "types.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 10,
        "functions": 10,
        "lines": 10,
        "statements": 10
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "plugin:react/recommended",
      "xo",
      "iplayer-ts",
      "prettier",
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "parserOptions": {
      "sourceType": "module"
    },
    "rules": {
      "react/react-in-jsx-scope": "off",
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "UPPER_CASE",
            "PascalCase"
          ],
          "leadingUnderscore": "allow"
        }
      ],
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/consistent-type-assertions": [
        "error",
        {
          "assertionStyle": "as"
        }
      ],
      "func-style": [
        "error",
        "declaration",
        {
          "allowArrowFunctions": true
        }
      ]
    }
  },
  "prettier": {
    "singleQuote": true,
    "arrowParens": "always",
    "trailingComma": "none",
    "importOrder": [
      "^@core/(.*)$",
      "^@server/(.*)$",
      "^@ui/(.*)$",
      "^[./]"
    ],
    "importOrderSeparation": true,
    "importOrderSortSpecifiers": true
  }
}
